knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(reshape2)
library(ggpubr)
library(ggfortify)
library(psych)
require(scales)
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
cases = dim(master)[1]
features = dim(master)[2]
cat('Data for this project is', cases, 'rows and', features, 'features')
head(master,1)
describe(master)
#Percent with high school diploma
hsd_hist <- ggplot(master, aes(x=hs_diploma_percent)) + geom_histogram()
#Percent with four year degrees
fyd_hist <- ggplot(master, aes(x=four_year_degree_percent)) + geom_histogram()
#Show education histograms
ggarrange(hsd_hist, fyd_hist,
labels = c("hsd", "fyd"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend = "bottom")
library(ggfortify)
ggplot(master, aes(x=avg_annual_pay)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
ggplot(master, aes(x=avg_home_value)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Select the data for the education heat map
ehm <- master %>%
select(hs_dropout = dropout_percent, hs_diploma = hs_diploma_percent, some_college = some_college_percent,  college_degree = four_year_degree_percent, avg_home_value)
#Calculate the correlation values
cormat <- round(cor(ehm),2)
melted_cormat <- melt(cormat)
#Create the Heatmap
ggheatmap <- ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
#Calculate the correlation values
cormat <- round(cor(chm),2)
melted_cormat <- melt(cormat)
#Create the Heatmap
library(ggplot2)
ggheatmap <- ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
scatterdf <- select(master, region, region_num, hs_diploma_percent, four_year_degree_percent, avg_annual_pay, resident_count, avg_home_value)
#Scatter chart of hs diploma percent
hsd_scatter <- ggplot(scatterdf, aes(avg_home_value, hs_diploma_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of four year degree percent
fyd_scatter <- ggplot(scatterdf, aes(avg_home_value, four_year_degree_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of average annual pay
aap_scatter <- ggplot(scatterdf, aes(avg_home_value, avg_annual_pay, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of resident count
rc_scatter <- ggplot(scatterdf, aes(avg_home_value, resident_count, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Show scatter charts
ggarrange(hsd_scatter, fyd_scatter, aap_scatter, rc_scatter,
labels = c("hsd", "fyd", "aap", "rc"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
#Violin of home values
hv_violin <- ggplot(scatterdf, aes(region_num, avg_home_value, colour = region)) +
geom_violin(trim = FALSE)
#Display the violin plots
ggarrange(hv_violin,
labels = c("hv"),
ncol = 1, nrow = 1,
common.legend = TRUE, legend = "top")
#Violin of high school diploma
hsd_violin <- ggplot(scatterdf, aes(region_num, hs_diploma_percent, colour = region)) +
geom_violin(trim = FALSE)
#Violin of four year degree
fyd_violin <- ggplot(scatterdf, aes(region_num, four_year_degree_percent, colour = region)) +
geom_violin(trim = FALSE)
#Display the violin plots
ggarrange(hsd_violin, fyd_violin,
labels = c("hsd", "fyd"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend = "bottom")
#Violin of wages
aap_violin <- ggplot(scatterdf, aes(region_num, avg_annual_pay, colour = region)) +
geom_violin(trim = FALSE) +
scale_y_continuous(labels = comma)
#Violin of resident count
rc_violin <- ggplot(scatterdf, aes(region_num, resident_count, colour = region)) +
geom_violin(trim = FALSE) +
scale_y_continuous(labels = comma)
#Display the violin plots
ggarrange(aap_violin, rc_violin,
labels = c("aap", "rc"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend = "bottom")
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
library(dplyr)
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
library(dplyr)
# load data
master <- read.csv('https://raw.githubusercontent.com/krpopkin/DATA607-Class-Repository/master/Final_Project/Data/master.csv')
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, college_degree = four_year_degree_percent, avg_home_value)
#Calculate the correlation values
cormat <- round(cor(chm),2)
melted_cormat <- melt(cormat)
#Create the Heatmap
library(ggplot2)
ggheatmap <- ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, avg_home_value)
#Calculate the correlation values
cormat <- round(cor(chm),2)
melted_cormat <- melt(cormat)
#Create the Heatmap
library(ggplot2)
ggheatmap <- ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
#Select the data for the heat map
chm <- master %>%
select(avg_annual_pay, resident_count, avg_home_value)
#Calculate the correlation values
cormat <- round(cor(chm),2)
melted_cormat <- melt(cormat)
#Create the Heatmap
library(ggplot2)
ggheatmap <- ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
scatterdf <- select(master, region, region_num, hs_diploma_percent, four_year_degree_percent, avg_annual_pay, resident_count, avg_home_value)
#Scatter chart of hs diploma percent
hsd_scatter <- ggplot(scatterdf, aes(avg_home_value, hs_diploma_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of four year degree percent
fyd_scatter <- ggplot(scatterdf, aes(avg_home_value, four_year_degree_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of average annual pay
aap_scatter <- ggplot(scatterdf, aes(avg_home_value, avg_annual_pay, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of resident count
rc_scatter <- ggplot(scatterdf, aes(avg_home_value, resident_count, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Show scatter charts
ggarrange(hsd_scatter, fyd_scatter, aap_scatter, rc_scatter,
labels = c("hsd", "fyd", "aap", "rc"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
library(ggfortify)
scatterdf <- select(master, region, region_num, hs_diploma_percent, four_year_degree_percent, avg_annual_pay, resident_count, avg_home_value)
#Scatter chart of hs diploma percent
hsd_scatter <- ggplot(scatterdf, aes(avg_home_value, hs_diploma_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of four year degree percent
fyd_scatter <- ggplot(scatterdf, aes(avg_home_value, four_year_degree_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of average annual pay
aap_scatter <- ggplot(scatterdf, aes(avg_home_value, avg_annual_pay, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of resident count
rc_scatter <- ggplot(scatterdf, aes(avg_home_value, resident_count, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Show scatter charts
ggarrange(hsd_scatter, fyd_scatter, aap_scatter, rc_scatter,
labels = c("hsd", "fyd", "aap", "rc"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
library(ggpubr)
scatterdf <- select(master, region, region_num, hs_diploma_percent, four_year_degree_percent, avg_annual_pay, resident_count, avg_home_value)
#Scatter chart of hs diploma percent
hsd_scatter <- ggplot(scatterdf, aes(avg_home_value, hs_diploma_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of four year degree percent
fyd_scatter <- ggplot(scatterdf, aes(avg_home_value, four_year_degree_percent, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of average annual pay
aap_scatter <- ggplot(scatterdf, aes(avg_home_value, avg_annual_pay, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Scatter chart of resident count
rc_scatter <- ggplot(scatterdf, aes(avg_home_value, resident_count, colour = region)) +
geom_point(alpha=0.5, position = 'jitter') +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma)
#Show scatter charts
ggarrange(hsd_scatter, fyd_scatter, aap_scatter, rc_scatter,
labels = c("hsd", "fyd", "aap", "rc"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
